<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!--指明 controller 所在包，并扫描其中的注解-->
	<context:component-scan base-package="cn.edu.usts.cs2018.controller" />
	<!-- 静态资源(js、image等)的访问 -->
	<mvc:default-servlet-handler/>
	<!-- 开启注解 -->

<!--	<mvc:resources mapping="**/**/images/**"-->
<!--				   location="images"/>-->
<!--	<mvc:default-servlet-handler />-->
<!--	<mvc:resources mapping="**/**/js/**"-->
<!--				   location="js"/>-->
<!--	<mvc:default-servlet-handler />-->
<!--	<mvc:resources mapping="**/**/css/**"-->
<!--				   location="css"/>-->
	<mvc:default-servlet-handler />
	<mvc:annotation-driven/>
	<!--ViewResolver 视图解析器-->
	<!--用于支持Servlet、JSP视图解析-->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
	</bean>



	<!--<bean id="multipartResolver"-->
		  <!--class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--&lt;!&ndash; 设置上传文件的最大尺寸为2MB &ndash;&gt;  -->
    	<!--<property name="maxUploadSize">  -->
        	<!--<value>2097152</value>-->
        <!--</property>  -->
	<!--</bean>  -->
	
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <!--<bean id="exceptionResolver"  -->
        <!--class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  -->
        <!--<property name="exceptionMappings">  -->
            <!--<props>  -->
                <!--&lt;!&ndash; 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 &ndash;&gt;  -->
                <!--<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">upload_error</prop>  -->
                <!---->
                <!--<prop key="com.jfrose.utils.UserException">user_error</prop>-->
            <!--</props>  -->
        <!--</property>  -->
    <!--</bean>  -->
    
    
    
    <!-- 国际化配置 
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<property name="basenames">
    		<list>
    			<value>classpath:resource/ValidationMessages</value>
    		</list>
    	</property>
    	<property name="useCodeAsDefaultMessage" value="true" />
    </bean>-->    
    
    <!-- 注册验证器 -->
    <!--<mvc:annotation-driven validator="validator" />-->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
    	<!--<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />-->
    	<!--&lt;!&ndash;这里配置将使用上面国际化配置的messageSource-->
    	<!--<property name="validationMessageSource" ref="messageSource" />-->
    	 <!--&ndash;&gt;-->
    <!--</bean>-->
	<!-- ===========配置数据源============ -->

	<!--读取db.properties -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 配置数据源2 -->
	<bean id="dataSource"
		  class="org.apache.commons.dbcp.BasicDataSource">
		<!--数据库驱动 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<!--连接数据库的url -->
		<property name="url" value="${jdbc.url}" />
		<!--连接数据库的用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!--连接数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
		<!--最大连接数 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!--最大空闲连接  -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<!--初始化连接数  -->
		<property name="initialSize" value="${jdbc.initialSize}" />
	</bean>

	<!-- 2.配置JDBC模板 -->
	<bean id="jdbcTemplate"
		  class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- 默认必须使用数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--&lt;!&ndash; 事务管理器，依赖于数据源 &ndash;&gt;-->
	<!--<bean id="transactionManager" class=-->
			<!--"org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource" />-->
	<!--</bean>-->

	<!--&lt;!&ndash;开启事务注解 &ndash;&gt;-->
	<!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

	<!--&lt;!&ndash;配置MyBatis工厂 &ndash;&gt;-->
	<!--<bean id="sqlSessionFactory"-->
		  <!--class="org.mybatis.spring.SqlSessionFactoryBean">-->
		<!--&lt;!&ndash;注入数据源 &ndash;&gt;-->
		<!--<property name="dataSource" ref="dataSource" />-->
		<!--&lt;!&ndash;指定核心配置文件位置 &ndash;&gt;-->
		<!--<property name="configLocation" value="classpath:MyBatis-config.xml"/>-->
	<!--</bean>-->

	<!--&lt;!&ndash; Mapper代理开发（基于MapperScannerConfigurer） &ndash;&gt;-->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
		<!--<property name="basePackage" value="cn.edu.usts.cs2018.dao.mapper" />-->
	<!--</bean>-->

	 <!--使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="cn.edu.usts.cs2018">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
</beans>
